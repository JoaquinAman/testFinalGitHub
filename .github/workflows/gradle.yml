# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    needs: [ tests, sonarcloud ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Change wrapper permissions
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: build
    - name: Upload Artifact to GitHub Actions
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: ${{ github.workspace }}

  tests:
    name: Unit Tests
#     needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
    
      - name: gradle Test
        run: gradle test

  sonarcloud:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
      # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: permissions to gradlew
      run: chmod +x ./gradlew
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build sonarqube --info -Dsonar.qualitygate.wait=true


  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: gitleaks-action
        uses: zricethezav/gitleaks-action@master
      
